# Generated by Django 3.1.4 on 2020-12-23 11:48

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Board Name')),
                ('status', models.CharField(choices=[('0', 'Inactive'), ('1', 'Active')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='BulkRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=users.models.excel_file)),
                ('dt', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='College Name')),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=255)),
                ('district', models.CharField(max_length=255)),
                ('pin_code', models.PositiveIntegerField()),
                ('logo', models.ImageField(storage=users.models.OverwriteStorage(), upload_to=users.models.college_directory)),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.board')),
            ],
        ),
        migrations.CreateModel(
            name='Composition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Course Name')),
                ('status', models.CharField(choices=[('0', 'Inactive'), ('1', 'Active')], max_length=1)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.college')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_no', models.CharField(max_length=255, unique=True)),
                ('f_name', models.CharField(max_length=255, null=True, verbose_name='Father Name')),
                ('m_name', models.CharField(max_length=255, null=True, verbose_name='Mother Name')),
                ('gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male')], max_length=1, null=True)),
                ('dob', models.DateField(null=True)),
                ('m_status', models.CharField(choices=[('U', 'Unmarried'), ('M', 'Married'), ('D', 'Divorce')], max_length=1, null=True)),
                ('adhar', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(message='Adhar number must be 16 digits long.', regex='^(\\+\\d{1,3})?,?\\s?\\d{16}')])),
                ('phone', models.DecimalField(decimal_places=0, max_digits=10, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 10 digits allowed.", regex='^(\\+\\d{1,3})?,?\\s?\\d{10}')])),
                ('whatsapp', models.DecimalField(decimal_places=0, max_digits=10, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 10 digits allowed.", regex='^(\\+\\d{1,3})?,?\\s?\\d{10}')])),
                ('address', models.TextField(null=True)),
                ('state', models.PositiveSmallIntegerField(choices=[(1, 'Andra Pradesh'), (2, 'Arunachal Pradesh'), (3, 'Assam'), (4, 'Bihar'), (5, 'Chhattisgarh'), (6, 'Goa'), (7, 'Gujarat'), (8, 'Haryana'), (9, 'Himachal Pradesh'), (10, 'Jammu and Kashmir'), (11, 'Jharkhand'), (12, 'Karnataka'), (13, 'Kerala'), (14, 'Madya Pradesh'), (15, 'Maharashtra'), (16, 'Manipur'), (17, 'Meghalaya'), (18, 'Mizoram'), (19, 'Nagaland'), (20, 'Orissa'), (21, 'Punjab'), (22, 'Rajasthan'), (23, 'Sikkim'), (24, 'Tamil Nadu'), (25, 'Telagana'), (26, 'Tripura'), (27, 'Uttaranchal'), (28, 'Uttar Pradesh'), (29, 'West Bengal'), (30, 'Andaman and Nicobar Islands'), (31, 'Chandigarh'), (32, 'Dadar and Nagar Haveli'), (33, 'Daman and Diu'), (34, 'Delhi'), (35, 'Lakshadeep'), (36, 'Pondicherry')], null=True)),
                ('city', models.CharField(max_length=255, null=True)),
                ('district', models.CharField(max_length=255, null=True)),
                ('pincode', models.PositiveIntegerField(null=True, validators=[django.core.validators.RegexValidator(message='Pincode number must be 6 digits long.', regex='^(\\+\\d{1,3})?,?\\s?\\d{6}')])),
                ('religion', models.CharField(choices=[('H', 'Hindu'), ('M', 'Muslim'), ('S', 'Sikh'), ('C', 'Christian'), ('O', 'Other')], max_length=1, null=True)),
                ('category', models.CharField(choices=[('G', 'General'), ('O', 'OBC'), ('E', 'EBC'), ('C', 'SC'), ('T', 'ST')], max_length=1, null=True)),
                ('g_occupation', models.CharField(max_length=255, null=True, verbose_name='Gurdian Occupation')),
                ('g_income', models.PositiveIntegerField(null=True, verbose_name='Gurdian Annual Income')),
                ('phy_disabled', models.CharField(choices=[('V', 'Visual Impairment'), ('H', 'Hearing Impairment'), ('O', 'Ortho Impairment'), ('N', 'None')], max_length=1, null=True)),
                ('img', models.ImageField(null=True, storage=users.models.OverwriteStorage(), upload_to=users.models.student_directory, verbose_name='Student Passport Photo')),
                ('sign', models.ImageField(null=True, storage=users.models.OverwriteStorage(), upload_to=users.models.sign_directory, verbose_name='Student Signature')),
                ('clc', models.ImageField(blank=True, null=True, storage=users.models.OverwriteStorage(), upload_to=users.models.clc_directory)),
                ('caste', models.ImageField(blank=True, null=True, storage=users.models.OverwriteStorage(), upload_to=users.models.caste_directory, verbose_name='Caste-EWS')),
                ('migration', models.ImageField(blank=True, null=True, storage=users.models.OverwriteStorage(), upload_to=users.models.migration_directory, verbose_name='Migration Certificate')),
                ('cota', models.ImageField(blank=True, null=True, storage=users.models.OverwriteStorage(), upload_to=users.models.cota_directory, verbose_name='SPECIAL COTA DOCUMENT')),
                ('status', models.BooleanField(default=False)),
                ('merit', models.PositiveIntegerField(choices=[(1, 'Merit1'), (2, 'Merit2'), (3, 'Merit3')], null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('host', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=9, unique=True, verbose_name='Session Name')),
                ('From', models.DateField()),
                ('to', models.DateField()),
                ('status', models.CharField(choices=[('0', 'Inactive'), ('1', 'Active')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Subject Name')),
                ('status', models.CharField(choices=[('0', 'Inactive'), ('1', 'Active')], max_length=1)),
                ('is_practical', models.BooleanField(null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.courses')),
            ],
        ),
        migrations.CreateModel(
            name='StudentFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feehead', models.PositiveIntegerField(choices=[(1, 'Admission'), (2, 'First Year'), (3, 'Second Year'), (4, 'Third Year')])),
                ('dt', models.DateTimeField(auto_now_add=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
            ],
        ),
        migrations.CreateModel(
            name='PreviousEducation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(choices=[('10', '10th'), ('12', '12th'), ('G', 'Graduation'), ('PG', 'Post Graduation')], max_length=255, verbose_name='Course Name')),
                ('stream', models.CharField(choices=[('S', 'Science'), ('C', 'Commerce'), ('A', 'Arts')], max_length=1)),
                ('passout', models.PositiveIntegerField(choices=[(20, 2020), (19, 2019), (18, 2018), (17, 2017), (16, 2016), (15, 2015), (14, 2014), (13, 2013), (12, 2012), (11, 2011), (10, 2010), (9, 2009), (8, 2008), (7, 2007), (6, 2006), (5, 2005), (4, 2004), (3, 2003), (2, 2002), (1, 2001), (0, 2000), (99, 1999), (98, 1998), (97, 1997), (96, 1996), (95, 1995), (94, 1994), (93, 1993), (92, 1992), (91, 1991), (90, 1990), (89, 1989), (88, 1988), (87, 1987), (86, 1986), (85, 1985)])),
                ('scholl_name', models.CharField(max_length=255)),
                ('marks_type', models.PositiveSmallIntegerField(choices=[(1, 'Marks'), (2, 'CGPA')])),
                ('total_marks', models.PositiveSmallIntegerField()),
                ('obtained_marks', models.PositiveSmallIntegerField()),
                ('marksheet', models.ImageField(storage=users.models.OverwriteStorage(), upload_to=users.models.student_marksheet)),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.board')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
            ],
        ),
        migrations.CreateModel(
            name='practical',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField()),
                ('subject', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.subject')),
            ],
        ),
        migrations.CreateModel(
            name='FeeMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feehead', models.PositiveIntegerField(choices=[(1, 'Admission'), (2, 'First Year'), (3, 'Second Year'), (4, 'Third Year')])),
                ('gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male')], max_length=1)),
                ('category', models.CharField(choices=[('G', 'General'), ('O', 'OBC'), ('E', 'EBC'), ('C', 'SC'), ('T', 'ST')], max_length=1)),
                ('status', models.CharField(choices=[('0', 'Inactive'), ('1', 'Active')], max_length=1)),
                ('amount', models.PositiveIntegerField()),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.board')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.courses')),
            ],
        ),
        migrations.CreateModel(
            name='CourseDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_session', models.CharField(choices=[('2020-2021', '2020-2021'), ('2019-2020', '2019-2020'), ('2018-2019', '2018-2019'), ('2017-2018', '2017-2018'), ('2016-2017', '2016-2017'), ('2015-2016', '2015-2016'), ('2014-2015', '2014-2015'), ('2013-2014', '2013-2014'), ('2012-2013', '2012-2013'), ('2011-2012', '2011-2012'), ('2010-2011', '2010-2011'), ('2009-2010', '2009-2010'), ('2008-2009', '2008-2009'), ('2007-2008', '2007-2008'), ('2006-2007', '2006-2007'), ('2005-2006', '2005-2006'), ('2004-2005', '2004-2005'), ('2003-2004', '2003-2004'), ('2002-2003', '2002-2003'), ('2001-2002', '2001-2002'), ('2000-2001', '2000-2001'), ('1999-2000', '1999-2000'), ('1998-1999', '1998-1999'), ('1997-1998', '1997-1998'), ('1996-1997', '1996-1997'), ('1995-1996', '1995-1996'), ('1994-1995', '1994-1995'), ('1993-1994', '1993-1994'), ('1992-1993', '1992-1993'), ('1991-1992', '1991-1992'), ('1990-1991', '1990-1991'), ('1989-1990', '1989-1990'), ('1988-1989', '1988-1989'), ('1987-1988', '1987-1988'), ('1986-1987', '1986-1987'), ('1985-1986', '1985-1986')], max_length=9)),
                ('inter_marks', models.PositiveIntegerField(null=True, verbose_name='12th Marksheet No')),
                ('inter_roll_code', models.PositiveIntegerField(blank=True, null=True, verbose_name="12'th Roll Code")),
                ('inter_roll_no', models.PositiveIntegerField(null=True, verbose_name="12'th Roll No")),
                ('comp_paper', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.composition')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.courses')),
                ('enroll_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.session')),
                ('hons_paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.subject')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
                ('sub1_paper', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub1_paper', to='users.subject')),
                ('sub2_paper', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub2_paper', to='users.subject')),
            ],
        ),
        migrations.AddField(
            model_name='composition',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.courses', verbose_name='Course Name'),
        ),
        migrations.AddField(
            model_name='composition',
            name='sub',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.subject', verbose_name='Subject Name'),
        ),
        migrations.AddConstraint(
            model_name='composition',
            constraint=models.UniqueConstraint(fields=('course', 'sub'), name='Subject already exist in with this course'),
        ),
    ]
